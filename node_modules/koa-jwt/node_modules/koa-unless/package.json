{
  "name": "koa-unless",
  "version": "0.0.1",
  "description": "Conditionally add a middleware to Koa with some common patterns.",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "koa",
    "middleware"
  ],
  "author": {
    "name": "Jesus Rodriguez"
  },
  "license": "MIT",
  "devDependencies": {
    "koa": "^0.21.0",
    "mocha": "^2.2.5",
    "supertest": "^1.0.1"
  },
  "readme": "# Koa Unless\n\n![Build Status](https://travis-ci.org/Foxandxss/koa-unless.svg?branch=master)\n\nConditionally skip a middleware when a condition is met.\n\n## Install\n\n\tnpm i koa-unless --save\n\n## Usage\n\nWith existing middlewares:\n\n```javascript\nvar unless = require('koa-unless');\nvar serve  = require('koa-static');\n\nvar static = serve(__dirname + '/public');\nstatic.unless = unless;\n\napp.use(static.unless({ method: 'OPTIONS' }));\n```\n\nIf you are authoring a middleware you can support unless as follow:\n\n```javascript\nmodule.exports = function () {\n  var mymid = function *(next) {\n\t// Do something\n  };\n\n  mymid.unless = require('koa-unless');\n\n  return mymid;\n};\n```\n\n## Current options\n\n-  `method` it could be an string or an array of strings. If the request method match the middleware will not run.\n-  `path` it could be an string, a regexp or an array of any of those. If the request path match, the middleware will not run.\n-  `ext` it could be an string or an array of strings. If the request path ends with one of these extensions the middleware will not run.\n-  `custom` it must be a function that returns `true` / `false`. If the function returns true for the given request, ithe middleware will not run. The function will have access to Koa's context via `this`\n-  `useOriginalUrl` it should be `true` or `false`, default is `true`. if false, `path` will match against `this.url` instead of `this.originalUrl`.\n\n\n## Examples\n\nRequire authentication for every request unless the path is index.html.\n\n```javascript\napp.use(requiresAuth.unless({ path: ['/index.html', '/'] }))\n```\n\nAvoid a fstat for request to routes doesnt end with a given extension.\n\n```javascript\napp.use(static.unless(function () {\n  var ext = url.parse(this.originalUrl).pathname.substr(-4);\n  return !~['.jpg', '.html', '.css', '.js'].indexOf(ext);\n}));\n```\n\n## Credits\n\nAll the credits for this library goes for [José F. Romaniello](https://github.com/jfromaniello) which created the original [express version](https://github.com/jfromaniello/express-unless).\n\n## License\n\nMIT 2015 - Jesús Rodríguez",
  "readmeFilename": "README.md",
  "_id": "koa-unless@0.0.1",
  "dist": {
    "shasum": "0abc54ab40971332d8cf1d24682617cde50c532d"
  },
  "_from": "koa-unless@0.0.1",
  "_resolved": "https://registry.npmjs.org/koa-unless/-/koa-unless-0.0.1.tgz"
}
